name: Automatic Version Bump
permissions:
  contents: write
concurrency:
  group: version-bump
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  version-bump:
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && !contains(github.event.pull_request.title, '[version bump]'))
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: goprUavOpsManager

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: goprUavOpsManager/package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Bump patch version in package.json
        id: new_version
        run: |
          NEW_VERSION=$(npm version patch --no-git-tag-version | sed 's/^v//')
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped package.json to $NEW_VERSION"

      - name: Update app.json version and android.versionCode
        run: |
          NEW_VERSION="${{ steps.new_version.outputs.version }}"
          node -e "
            const fs = require('fs');
            const appJson = JSON.parse(fs.readFileSync('app.json', 'utf8'));

            // Update version
            appJson.expo.version = '$NEW_VERSION';

            // Ensure android object exists
            if (!appJson.expo.android) appJson.expo.android = {};

            // Bump or initialize versionCode
            if (!appJson.expo.android.versionCode) {
              appJson.expo.android.versionCode = 1;
            } else {
              appJson.expo.android.versionCode += 1;
            }

            fs.writeFileSync('app.json', JSON.stringify(appJson, null, 2) + '\n');
            console.log('Updated app.json: version=' + appJson.expo.version + ', android.versionCode=' + appJson.expo.android.versionCode);
          "

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit version bump
        run: |
          CURRENT_VERSION="${{ steps.current_version.outputs.version }}"
          NEW_VERSION="${{ steps.new_version.outputs.version }}"

          git add package.json package-lock.json app.json
          git commit \
            -m "[version bump] v$NEW_VERSION" \
            -m "Automatically bumped patch version." \
            -m "- package.json: $CURRENT_VERSION → $NEW_VERSION" \
            -m "- app.json: $CURRENT_VERSION → $NEW_VERSION" || echo "No changes to commit"

      - name: Push changes to main
        run: |
          git pull --rebase origin main
          git push origin main

      - name: Create version branch and tag
        run: |
          NEW_VERSION="${{ steps.new_version.outputs.version }}"
          BRANCH_NAME="version-$NEW_VERSION"
          
          # Create version branch
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME

          # Create and push tag
          git tag "v$NEW_VERSION"
          git push origin "v$NEW_VERSION"
