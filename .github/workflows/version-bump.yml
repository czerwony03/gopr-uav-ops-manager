name: Automatic Version Bump

"on":
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  version-bump:
    # Only run if the PR was merged (not just closed) and skip if this is already a version bump commit
    if: github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged == true && !contains(github.event.pull_request.title, '[version bump]'))
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: goprUavOpsManager

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Use a token that can push to protected branches
          token: ${{ secrets.GITHUB_TOKEN }}
          # Checkout the main branch since we're in a PR context
          ref: main
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: goprUavOpsManager/package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: new_version
        run: |
          CURRENT_VERSION="${{ steps.current_version.outputs.version }}"
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          NEW_VERSION="${{ steps.new_version.outputs.version }}"
          npm version $NEW_VERSION --no-git-tag-version

      - name: Update app.json version
        run: |
          NEW_VERSION="${{ steps.new_version.outputs.version }}"
          node -e "
            const fs = require('fs');
            const appJson = JSON.parse(fs.readFileSync('app.json', 'utf8'));
            appJson.expo.version = '$NEW_VERSION';
            fs.writeFileSync('app.json', JSON.stringify(appJson, null, 2) + '\n');
            console.log('Updated app.json version to: $NEW_VERSION');
          "

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit version bump
        run: |
          NEW_VERSION="${{ steps.new_version.outputs.version }}"
          git add package.json package-lock.json app.json
          git commit -m "[version bump] v$NEW_VERSION

          Automatically bumped patch version after PR merge.
          
          - package.json: ${{ steps.current_version.outputs.version }} → $NEW_VERSION
          - app.json: ${{ steps.current_version.outputs.version }} → $NEW_VERSION"

      - name: Push changes
        run: |
          git push origin main
