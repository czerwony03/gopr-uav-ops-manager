name: Deploy Expo Web to EAS Hosting
permissions:
  contents: read
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      alias:
        description: "EAS Hosting deploy alias"
        required: true
        default: "test"
  workflow_run:
    workflows: [ "Automatic Version Bump" ]
    types:
      - completed
  issue_comment:
    types: [created]

jobs:
  deploy-web:
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'issue_comment' &&
       (github.event.comment.body == '/build' || github.event.comment.body == '/build web') &&
       github.event.issue.pull_request != null)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: goprUavOpsManager

    env:
      VARS_CONTEXT: ${{ toJson(vars) }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: goprUavOpsManager/package-lock.json

      - name: Set env vars from vars context JSON
        run: |
          echo "$VARS_CONTEXT" | jq -r 'to_entries | .[] | "\(.key)=\(.value)"' >> $GITHUB_ENV

      - name: Restore google-services.json
        run: |
          echo "$GOOGLE_SERVICES_JSON" | base64 --decode > google-services.json
        shell: bash
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Set Git commit hash
        run: echo "EXPO_PUBLIC_GIT_COMMIT_HASH=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EAS_TOKEN }}

      - name: Export Expo Web App
        run: npm run export:web:sourcemaps
        env:
          EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.EXPO_PUBLIC_FIREBASE_API_KEY }}

      - name: Deploy to EAS Hosting (alias test)
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            npx eas deploy --alias "${{ github.event.inputs.alias }}"
          else
            npx eas deploy --alias test
          fi

      - name: Upload Sentry Source Maps
        run: |
          rm -f dist/sw.js dist/sw.js.map dist/workbox*.js dist/workbox*.js.map
          npx sentry-expo-upload-sourcemaps dist
