name: Build Android Signed APK & AAB

on:
  workflow_dispatch:
    inputs:
      buildType:
        description: "Choose build type"
        required: true
        default: "apk"
        type: choice
        options:
          - apk
          - aab
          - both
  push:
    branches:
      - main
  workflow_run:
    workflows: [ "Automatic Version Bump" ]
    types:
      - completed

jobs:
  deploy:
    if: github.event_name == 'workflow_dispatch' || 
        (github.event_name == 'push' && contains(github.event.head_commit.message, 'version bump')) || 
        github.event_name == 'workflow_run'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: goprUavOpsManager

    env:
      VARS_CONTEXT: ${{ toJson(vars) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: goprUavOpsManager/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Expo CLI
        run: npm install -g expo-cli

      - name: Set BUILD_TYPE
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "BUILD_TYPE=${{ github.event.inputs.buildType }}" >> $GITHUB_ENV
          else
            echo "BUILD_TYPE=both" >> $GITHUB_ENV
          fi

      - name: Set env vars from vars context JSON
        run: |
          echo "$VARS_CONTEXT" | jq -r 'to_entries | .[] | "\(.key)=\(.value)"' >> $GITHUB_ENV

      - name: Set Git commit hash
        run: echo "EXPO_PUBLIC_GIT_COMMIT_HASH=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Prebuild
        run: npx expo prebuild --platform android
        env:
          EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.EXPO_PUBLIC_FIREBASE_API_KEY }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Decode Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/my-release-key.keystore

      - name: Verify keystore
        run: |
          ls -lh android/app/*.keystore
          keytool -list -v -keystore android/app/my-release-key.keystore -storepass ${{ secrets.ANDROID_KEYSTORE_PASSWORD }} || true

      - name: Build Release APK
        if: github.event.inputs.buildType == 'apk' || github.event.inputs.buildType == 'both' || github.event_name != 'workflow_dispatch'
        run: |
          cd android
          cat app/build.gradle
          ./gradlew assembleRelease --info \
            -PMYAPP_UPLOAD_STORE_FILE=my-release-key.keystore \
            -PMYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }} \
            -PMYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
            -PMYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.EXPO_PUBLIC_FIREBASE_API_KEY }}

      - name: Build Release AAB
        if: github.event.inputs.buildType == 'aab' || github.event.inputs.buildType == 'both' || github.event_name != 'workflow_dispatch'
        run: |
          cd android
          ./gradlew bundleRelease \
            -PMYAPP_UPLOAD_STORE_FILE=my-release-key.keystore \
            -PMYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }} \
            -PMYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
            -PMYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.EXPO_PUBLIC_FIREBASE_API_KEY }}

      - name: Upload APK/AAB
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            goprUavOpsManager/android/app/build/outputs/apk/release/*.apk
            goprUavOpsManager/android/app/build/outputs/bundle/release/*.aab
          if-no-files-found: ignore
